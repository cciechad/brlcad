# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 30789 2008-04-22 21:38:26Z erikgreenwald $
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AWK = @AWK@
BCEDITOR = @BCEDITOR@
BC_ARG0 = @BC_ARG0@
BC_ARGS = @BC_ARGS@
BLT = @BLT@
BLT_LIBRARY = @BLT_LIBRARY@
BLT_SUFFIX = @BLT_SUFFIX@
BLT_VERSION = @BLT_VERSION@
BN = @BN@
BN_LIBS = @BN_LIBS@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BRLCAD = @BRLCAD@
BRLCAD_DATA = @BRLCAD_DATA@
BRLCAD_LIBS = @BRLCAD_LIBS@
BRLCAD_ROOT = @BRLCAD_ROOT@
BRLCAD_VERSION = @BRLCAD_VERSION@
BU = @BU@
BU_LIBS = @BU_LIBS@
CC = @CC@
CONFIG_CACHE = @CONFIG_CACHE@
CONFIG_DATE = @CONFIG_DATE@
CONFIG_DAY = @CONFIG_DAY@
CONFIG_MONTH = @CONFIG_MONTH@
CONFIG_TS = @CONFIG_TS@
CONFIG_YEAR = @CONFIG_YEAR@
CP = @CP@
CPP = @CPP@
CURSOR = @CURSOR@
CURSOR_LIBS = @CURSOR_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DM = @DM@
DM_LIBS = @DM_LIBS@
DTRACE = @DTRACE@
DTRACE_HDR = @DTRACE_HDR@
DTRACE_OBJ = @DTRACE_OBJ@
DTRACE_SRC = @DTRACE_SRC@
ECHO = @ECHO@
ECHO_N = @ECHO_N@
EGREP = @EGREP@
F77 = @F77@
FB = @FB@
FB_LIBS = @FB_LIBS@
FEXCEPTIONS = @FEXCEPTIONS@
FFT = @FFT@
FFT_LIBS = @FFT_LIBS@
FRAMEWORK_CARBON = @FRAMEWORK_CARBON@
FRAMEWORK_COREFOUNDATION = @FRAMEWORK_COREFOUNDATION@
FRAMEWORK_JAVAVM = @FRAMEWORK_JAVAVM@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GED = @GED@
GED_LIBS = @GED_LIBS@
GL_CFLAGS = @GL_CFLAGS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ITCL = @ITCL@
ITCL_CPPFLAGS = @ITCL_CPPFLAGS@
ITCL_LIB_FILE = @ITCL_LIB_FILE@
ITCL_VERSION = @ITCL_VERSION@
ITK = @ITK@
ITK_CPPFLAGS = @ITK_CPPFLAGS@
ITK_LIB_FILE = @ITK_LIB_FILE@
IWIDGETS_VERSION = @IWIDGETS_VERSION@
JAVA_CFLAGS = @JAVA_CFLAGS@
JAVA_LDFLAGS = @JAVA_LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBDL = @LIBDL@
LIBDS = @LIBDS@
LIBGEN = @LIBGEN@
LIBGL = @LIBGL@
LIBITCL = @LIBITCL@
LIBITK = @LIBITK@
LIBL = @LIBL@
LIBM = @LIBM@
LIBMALLOC = @LIBMALLOC@
LIBMX = @LIBMX@
LIBNSL = @LIBNSL@
LIBOPENNURBS = @LIBOPENNURBS@
LIBPNG = @LIBPNG@
LIBREGEX = @LIBREGEX@
LIBSGIGL = @LIBSGIGL@
LIBSOCKET = @LIBSOCKET@
LIBSTDCXX = @LIBSTDCXX@
LIBTCL = @LIBTCL@
LIBTHREAD = @LIBTHREAD@
LIBTK = @LIBTK@
LIBTOOL = @LIBTOOL@
LIBTOOLFLAGS = @LIBTOOLFLAGS@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIBWGL = @LIBWGL@
LIBZ = @LIBZ@
LIBZ_CPPFLAGS = @LIBZ_CPPFLAGS@
LN_S = @LN_S@
MAINT = @MAINT@
MKDIR_P = @MKDIR_P@
MULTISPECTRAL = @MULTISPECTRAL@
MULTISPECTRAL_LIBS = @MULTISPECTRAL_LIBS@
MV = @MV@
OBJDUMP = @OBJDUMP@
OPENNURBS = @OPENNURBS@
OPENNURBS_CPPFLAGS = @OPENNURBS_CPPFLAGS@
OPTICAL = @OPTICAL@
OPTICAL_LIBS = @OPTICAL_LIBS@
ORLE = @ORLE@
ORLE_LIBS = @ORLE_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_NAME = @PACKAGE_NAME@
PKG = @PKG@
PKG_LIBS = @PKG_LIBS@
PNG = @PNG@
PNG_CPPFLAGS = @PNG_CPPFLAGS@
PRO_ENGINEER_DIR = @PRO_ENGINEER_DIR@
RANLIB = @RANLIB@
RC = @RC@
REGEX = @REGEX@
REGEX_CPPFLAGS = @REGEX_CPPFLAGS@
RLE = @RLE@
RLE_CPPFLAGS = @RLE_CPPFLAGS@
RM = @RM@
RT = @RT@
RT_LIBS = @RT_LIBS@
SAMPLE_APPLICATIONS_DIR = @SAMPLE_APPLICATIONS_DIR@
SH = @SH@
SSE = @SSE@
STRIP = @STRIP@
SYSV = @SYSV@
SYSV_LIBS = @SYSV_LIBS@
TCL = @TCL@
TCLCAD = @TCLCAD@
TCLCAD_LIBS = @TCLCAD_LIBS@
TCLSTUB = @TCLSTUB@
TCL_CPPFLAGS = @TCL_CPPFLAGS@
TCL_PATH = @TCL_PATH@
TCL_VERSION = @TCL_VERSION@
TERMIO = @TERMIO@
TERMIO_LIBS = @TERMIO_LIBS@
TERMLIB = @TERMLIB@
TERMLIB_CPPFLAGS = @TERMLIB_CPPFLAGS@
TK = @TK@
TKIMG = @TKIMG@
TKIMG_VERSION = @TKIMG_VERSION@
TKSTUB = @TKSTUB@
TK_CPPFLAGS = @TK_CPPFLAGS@
TK_PATH = @TK_PATH@
TK_VERSION = @TK_VERSION@
TNT_CPPFLAGS = @TNT_CPPFLAGS@
U = @U@
VERSION = @VERSION@
WDB = @WDB@
WDB_LIBS = @WDB_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PREFIX = @X_PREFIX@
X_PRE_LIBS = @X_PRE_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
mkdir_p = @mkdir_p@

proc_db_libs = ${WDB} ${WDB_LIBS}

LDADD = ${proc_db_libs}
AM_CPPFLAGS = ${TCL_CPPFLAGS} -Wall

bin_PROGRAMS = \
	bottest \
	brep_cube \
	brep_simple \
	breplicator \
	brickwall \
	clutter \
	contours \
	fence \
	globe \
	kurt \
	masonry \
	molecule \
	nmgmodel \
	picket_fence \
	pipe \
	pipetest \
	pix2g \
	pyramid \
	rawbot \
	room \
	sketch \
	sphflake \
	spltest \
	tea \
	tea_nmg \
	terrain \
	tire \
	torii \
	tube \
	vegitation \
	wdb_example


bottest_SOURCES = bottest.c

brep_cube_SOURCES = brep_cube.cpp
brep_simple_SOURCES = brep_simple.cpp
breplicator_SOURCES = breplicator.cpp

# per-target CPPFLAGS not available until automake 1.7+
brep_cube_CXXFLAGS = -DOBJ_BREP=1 ${OPENNURBS_CPPFLAGS}
brep_simple_CXXFLAGS = -DOBJ_BREP=1 ${OPENNURBS_CPPFLAGS}
breplicator_CXXFLAGS = -DOBJ_BREP=1 ${OPENNURBS_CPPFLAGS}

brep_cube_LDADD = \
	${proc_db_libs} \
	${OPENNURBS}

brep_simple_LDADD = \
	${proc_db_libs} \
	${OPENNURBS}

breplicator_LDADD = \
	${proc_db_libs} \
	${OPENNURBS}


brickwall_SOURCES = brickwall.c
clutter_SOURCES = clutter.c common.c
contours_SOURCES = contours.c
fence_SOURCES = fence.c
globe_SOURCES = globe.c
kurt_SOURCES = kurt.c
masonry_SOURCES = masonry.c
molecule_SOURCES = molecule.c
nmgmodel_SOURCES = nmgmodel.c
picket_fence_SOURCES = picket_fence.c
pipe_SOURCES = pipe.c
pipetest_SOURCES = pipetest.c
pix2g_SOURCES = pix2g.c
pyramid_SOURCES = pyramid.c
rawbot_SOURCES = rawbot.c
room_SOURCES = room.c common.c
sketch_SOURCES = sketch.c
sphflake_SOURCES = sphflake.c
spltest_SOURCES = spltest.c
tea_SOURCES = tea.c
tea_nmg_SOURCES = tea_nmg.c
terrain_SOURCES = terrain.c
tire_SOURCES = tire.c
torii_SOURCES = torii.c
tube_SOURCES = tube.c
vegitation_SOURCES = vegitation.c
wdb_example_SOURCES = wdb_example.c

noinst_HEADERS = \
	ducks.h \
	fence.h \
	patches.h \
	tea.h \
	vegitation.h


man_MANS = \
	picket_fence.1 \
	tire.1


EXTRA_DIST = \
	$(man_MANS) \
	sgi.sh


DEPENDS = src/libwdb

FAST_OBJECTS = \
	$(bottest_OBJECTS) \
	$(brep_simple_OBJECTS) \
	$(brep_cube_OBJECTS) \
	$(breplicator_OBJECTS) \
	$(brickwall_OBJECTS) \
	$(clutter_OBJECTS) \
	$(contours_OBJECTS) \
	$(fence_OBJECTS) \
	$(globe_OBJECTS) \
	$(kurt_OBJECTS) \
	$(masonry_OBJECTS) \
	$(molecule_OBJECTS) \
	$(nmgmodel_OBJECTS) \
	$(picket_fence_OBJECTS) \
	$(pipe_OBJECTS) \
	$(pipetest_OBJECTS) \
	$(pix2g_OBJECTS) \
	$(pyramid_OBJECTS) \
	$(rawbot_OBJECTS) \
	$(room_OBJECTS) \
	$(sketch_OBJECTS) \
	$(sphflake_OBJECTS) \
	$(spltest_OBJECTS) \
	$(tea_OBJECTS) \
	$(tea_nmg_OBJECTS) \
	$(terrain_OBJECTS) \
	$(tire_OBJECTS) \
	$(torii_OBJECTS) \
	$(tube_OBJECTS) \
	$(vegitation_OBJECTS) \
	$(wdb_example_OBJECTS) \
	$(bin_PROGRAMS)

subdir = src/proc-db
mkinstalldirs = $(SHELL) $(top_srcdir)/misc/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/brlcad_config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = bottest$(EXEEXT) brep_cube$(EXEEXT) brep_simple$(EXEEXT) \
	breplicator$(EXEEXT) brickwall$(EXEEXT) clutter$(EXEEXT) \
	contours$(EXEEXT) fence$(EXEEXT) globe$(EXEEXT) kurt$(EXEEXT) \
	masonry$(EXEEXT) molecule$(EXEEXT) nmgmodel$(EXEEXT) \
	picket_fence$(EXEEXT) pipe$(EXEEXT) pipetest$(EXEEXT) \
	pix2g$(EXEEXT) pyramid$(EXEEXT) rawbot$(EXEEXT) room$(EXEEXT) \
	sketch$(EXEEXT) sphflake$(EXEEXT) spltest$(EXEEXT) tea$(EXEEXT) \
	tea_nmg$(EXEEXT) terrain$(EXEEXT) tire$(EXEEXT) torii$(EXEEXT) \
	tube$(EXEEXT) vegitation$(EXEEXT) wdb_example$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_bottest_OBJECTS = bottest.$(OBJEXT)
bottest_OBJECTS = $(am_bottest_OBJECTS)
bottest_LDADD = $(LDADD)
bottest_DEPENDENCIES =
bottest_LDFLAGS =
am_brep_cube_OBJECTS = brep_cube-brep_cube.$(OBJEXT)
brep_cube_OBJECTS = $(am_brep_cube_OBJECTS)
brep_cube_DEPENDENCIES =
brep_cube_LDFLAGS =
am_brep_simple_OBJECTS = brep_simple-brep_simple.$(OBJEXT)
brep_simple_OBJECTS = $(am_brep_simple_OBJECTS)
brep_simple_DEPENDENCIES =
brep_simple_LDFLAGS =
am_breplicator_OBJECTS = breplicator-breplicator.$(OBJEXT)
breplicator_OBJECTS = $(am_breplicator_OBJECTS)
breplicator_DEPENDENCIES =
breplicator_LDFLAGS =
am_brickwall_OBJECTS = brickwall.$(OBJEXT)
brickwall_OBJECTS = $(am_brickwall_OBJECTS)
brickwall_LDADD = $(LDADD)
brickwall_DEPENDENCIES =
brickwall_LDFLAGS =
am_clutter_OBJECTS = clutter.$(OBJEXT) common.$(OBJEXT)
clutter_OBJECTS = $(am_clutter_OBJECTS)
clutter_LDADD = $(LDADD)
clutter_DEPENDENCIES =
clutter_LDFLAGS =
am_contours_OBJECTS = contours.$(OBJEXT)
contours_OBJECTS = $(am_contours_OBJECTS)
contours_LDADD = $(LDADD)
contours_DEPENDENCIES =
contours_LDFLAGS =
am_fence_OBJECTS = fence.$(OBJEXT)
fence_OBJECTS = $(am_fence_OBJECTS)
fence_LDADD = $(LDADD)
fence_DEPENDENCIES =
fence_LDFLAGS =
am_globe_OBJECTS = globe.$(OBJEXT)
globe_OBJECTS = $(am_globe_OBJECTS)
globe_LDADD = $(LDADD)
globe_DEPENDENCIES =
globe_LDFLAGS =
am_kurt_OBJECTS = kurt.$(OBJEXT)
kurt_OBJECTS = $(am_kurt_OBJECTS)
kurt_LDADD = $(LDADD)
kurt_DEPENDENCIES =
kurt_LDFLAGS =
am_masonry_OBJECTS = masonry.$(OBJEXT)
masonry_OBJECTS = $(am_masonry_OBJECTS)
masonry_LDADD = $(LDADD)
masonry_DEPENDENCIES =
masonry_LDFLAGS =
am_molecule_OBJECTS = molecule.$(OBJEXT)
molecule_OBJECTS = $(am_molecule_OBJECTS)
molecule_LDADD = $(LDADD)
molecule_DEPENDENCIES =
molecule_LDFLAGS =
am_nmgmodel_OBJECTS = nmgmodel.$(OBJEXT)
nmgmodel_OBJECTS = $(am_nmgmodel_OBJECTS)
nmgmodel_LDADD = $(LDADD)
nmgmodel_DEPENDENCIES =
nmgmodel_LDFLAGS =
am_picket_fence_OBJECTS = picket_fence.$(OBJEXT)
picket_fence_OBJECTS = $(am_picket_fence_OBJECTS)
picket_fence_LDADD = $(LDADD)
picket_fence_DEPENDENCIES =
picket_fence_LDFLAGS =
am_pipe_OBJECTS = pipe.$(OBJEXT)
pipe_OBJECTS = $(am_pipe_OBJECTS)
pipe_LDADD = $(LDADD)
pipe_DEPENDENCIES =
pipe_LDFLAGS =
am_pipetest_OBJECTS = pipetest.$(OBJEXT)
pipetest_OBJECTS = $(am_pipetest_OBJECTS)
pipetest_LDADD = $(LDADD)
pipetest_DEPENDENCIES =
pipetest_LDFLAGS =
am_pix2g_OBJECTS = pix2g.$(OBJEXT)
pix2g_OBJECTS = $(am_pix2g_OBJECTS)
pix2g_LDADD = $(LDADD)
pix2g_DEPENDENCIES =
pix2g_LDFLAGS =
am_pyramid_OBJECTS = pyramid.$(OBJEXT)
pyramid_OBJECTS = $(am_pyramid_OBJECTS)
pyramid_LDADD = $(LDADD)
pyramid_DEPENDENCIES =
pyramid_LDFLAGS =
am_rawbot_OBJECTS = rawbot.$(OBJEXT)
rawbot_OBJECTS = $(am_rawbot_OBJECTS)
rawbot_LDADD = $(LDADD)
rawbot_DEPENDENCIES =
rawbot_LDFLAGS =
am_room_OBJECTS = room.$(OBJEXT) common.$(OBJEXT)
room_OBJECTS = $(am_room_OBJECTS)
room_LDADD = $(LDADD)
room_DEPENDENCIES =
room_LDFLAGS =
am_sketch_OBJECTS = sketch.$(OBJEXT)
sketch_OBJECTS = $(am_sketch_OBJECTS)
sketch_LDADD = $(LDADD)
sketch_DEPENDENCIES =
sketch_LDFLAGS =
am_sphflake_OBJECTS = sphflake.$(OBJEXT)
sphflake_OBJECTS = $(am_sphflake_OBJECTS)
sphflake_LDADD = $(LDADD)
sphflake_DEPENDENCIES =
sphflake_LDFLAGS =
am_spltest_OBJECTS = spltest.$(OBJEXT)
spltest_OBJECTS = $(am_spltest_OBJECTS)
spltest_LDADD = $(LDADD)
spltest_DEPENDENCIES =
spltest_LDFLAGS =
am_tea_OBJECTS = tea.$(OBJEXT)
tea_OBJECTS = $(am_tea_OBJECTS)
tea_LDADD = $(LDADD)
tea_DEPENDENCIES =
tea_LDFLAGS =
am_tea_nmg_OBJECTS = tea_nmg.$(OBJEXT)
tea_nmg_OBJECTS = $(am_tea_nmg_OBJECTS)
tea_nmg_LDADD = $(LDADD)
tea_nmg_DEPENDENCIES =
tea_nmg_LDFLAGS =
am_terrain_OBJECTS = terrain.$(OBJEXT)
terrain_OBJECTS = $(am_terrain_OBJECTS)
terrain_LDADD = $(LDADD)
terrain_DEPENDENCIES =
terrain_LDFLAGS =
am_tire_OBJECTS = tire.$(OBJEXT)
tire_OBJECTS = $(am_tire_OBJECTS)
tire_LDADD = $(LDADD)
tire_DEPENDENCIES =
tire_LDFLAGS =
am_torii_OBJECTS = torii.$(OBJEXT)
torii_OBJECTS = $(am_torii_OBJECTS)
torii_LDADD = $(LDADD)
torii_DEPENDENCIES =
torii_LDFLAGS =
am_tube_OBJECTS = tube.$(OBJEXT)
tube_OBJECTS = $(am_tube_OBJECTS)
tube_LDADD = $(LDADD)
tube_DEPENDENCIES =
tube_LDFLAGS =
am_vegitation_OBJECTS = vegitation.$(OBJEXT)
vegitation_OBJECTS = $(am_vegitation_OBJECTS)
vegitation_LDADD = $(LDADD)
vegitation_DEPENDENCIES =
vegitation_LDFLAGS =
am_wdb_example_OBJECTS = wdb_example.$(OBJEXT)
wdb_example_OBJECTS = $(am_wdb_example_OBJECTS)
wdb_example_LDADD = $(LDADD)
wdb_example_DEPENDENCIES =
wdb_example_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/misc/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/bottest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/brep_cube-brep_cube.Po \
@AMDEP_TRUE@	./$(DEPDIR)/brep_simple-brep_simple.Po \
@AMDEP_TRUE@	./$(DEPDIR)/breplicator-breplicator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/brickwall.Po ./$(DEPDIR)/clutter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/common.Po ./$(DEPDIR)/contours.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fence.Po ./$(DEPDIR)/globe.Po \
@AMDEP_TRUE@	./$(DEPDIR)/kurt.Po ./$(DEPDIR)/masonry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/molecule.Po ./$(DEPDIR)/nmgmodel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/picket_fence.Po ./$(DEPDIR)/pipe.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pipetest.Po ./$(DEPDIR)/pix2g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pyramid.Po ./$(DEPDIR)/rawbot.Po \
@AMDEP_TRUE@	./$(DEPDIR)/room.Po ./$(DEPDIR)/sketch.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sphflake.Po ./$(DEPDIR)/spltest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tea.Po ./$(DEPDIR)/tea_nmg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/terrain.Po ./$(DEPDIR)/tire.Po \
@AMDEP_TRUE@	./$(DEPDIR)/torii.Po ./$(DEPDIR)/tube.Po \
@AMDEP_TRUE@	./$(DEPDIR)/vegitation.Po \
@AMDEP_TRUE@	./$(DEPDIR)/wdb_example.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(bottest_SOURCES) $(brep_cube_SOURCES) \
	$(brep_simple_SOURCES) $(breplicator_SOURCES) \
	$(brickwall_SOURCES) $(clutter_SOURCES) $(contours_SOURCES) \
	$(fence_SOURCES) $(globe_SOURCES) $(kurt_SOURCES) \
	$(masonry_SOURCES) $(molecule_SOURCES) $(nmgmodel_SOURCES) \
	$(picket_fence_SOURCES) $(pipe_SOURCES) $(pipetest_SOURCES) \
	$(pix2g_SOURCES) $(pyramid_SOURCES) $(rawbot_SOURCES) \
	$(room_SOURCES) $(sketch_SOURCES) $(sphflake_SOURCES) \
	$(spltest_SOURCES) $(tea_SOURCES) $(tea_nmg_SOURCES) \
	$(terrain_SOURCES) $(tire_SOURCES) $(torii_SOURCES) \
	$(tube_SOURCES) $(vegitation_SOURCES) $(wdb_example_SOURCES)

NROFF = nroff
MANS = $(man_MANS)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(bottest_SOURCES) $(brep_cube_SOURCES) $(brep_simple_SOURCES) $(breplicator_SOURCES) $(brickwall_SOURCES) $(clutter_SOURCES) $(contours_SOURCES) $(fence_SOURCES) $(globe_SOURCES) $(kurt_SOURCES) $(masonry_SOURCES) $(molecule_SOURCES) $(nmgmodel_SOURCES) $(picket_fence_SOURCES) $(pipe_SOURCES) $(pipetest_SOURCES) $(pix2g_SOURCES) $(pyramid_SOURCES) $(rawbot_SOURCES) $(room_SOURCES) $(sketch_SOURCES) $(sphflake_SOURCES) $(spltest_SOURCES) $(tea_SOURCES) $(tea_nmg_SOURCES) $(terrain_SOURCES) $(tire_SOURCES) $(torii_SOURCES) $(tube_SOURCES) $(vegitation_SOURCES) $(wdb_example_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/misc/Makefile.defs $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/proc-db/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
bottest$(EXEEXT): $(bottest_OBJECTS) $(bottest_DEPENDENCIES) 
	@rm -f bottest$(EXEEXT)
	$(LINK) $(bottest_LDFLAGS) $(bottest_OBJECTS) $(bottest_LDADD) $(LIBS)
brep_cube-brep_cube.$(OBJEXT): brep_cube.cpp
brep_cube$(EXEEXT): $(brep_cube_OBJECTS) $(brep_cube_DEPENDENCIES) 
	@rm -f brep_cube$(EXEEXT)
	$(CXXLINK) $(brep_cube_LDFLAGS) $(brep_cube_OBJECTS) $(brep_cube_LDADD) $(LIBS)
brep_simple-brep_simple.$(OBJEXT): brep_simple.cpp
brep_simple$(EXEEXT): $(brep_simple_OBJECTS) $(brep_simple_DEPENDENCIES) 
	@rm -f brep_simple$(EXEEXT)
	$(CXXLINK) $(brep_simple_LDFLAGS) $(brep_simple_OBJECTS) $(brep_simple_LDADD) $(LIBS)
breplicator-breplicator.$(OBJEXT): breplicator.cpp
breplicator$(EXEEXT): $(breplicator_OBJECTS) $(breplicator_DEPENDENCIES) 
	@rm -f breplicator$(EXEEXT)
	$(CXXLINK) $(breplicator_LDFLAGS) $(breplicator_OBJECTS) $(breplicator_LDADD) $(LIBS)
brickwall$(EXEEXT): $(brickwall_OBJECTS) $(brickwall_DEPENDENCIES) 
	@rm -f brickwall$(EXEEXT)
	$(LINK) $(brickwall_LDFLAGS) $(brickwall_OBJECTS) $(brickwall_LDADD) $(LIBS)
clutter$(EXEEXT): $(clutter_OBJECTS) $(clutter_DEPENDENCIES) 
	@rm -f clutter$(EXEEXT)
	$(LINK) $(clutter_LDFLAGS) $(clutter_OBJECTS) $(clutter_LDADD) $(LIBS)
contours$(EXEEXT): $(contours_OBJECTS) $(contours_DEPENDENCIES) 
	@rm -f contours$(EXEEXT)
	$(LINK) $(contours_LDFLAGS) $(contours_OBJECTS) $(contours_LDADD) $(LIBS)
fence$(EXEEXT): $(fence_OBJECTS) $(fence_DEPENDENCIES) 
	@rm -f fence$(EXEEXT)
	$(LINK) $(fence_LDFLAGS) $(fence_OBJECTS) $(fence_LDADD) $(LIBS)
globe$(EXEEXT): $(globe_OBJECTS) $(globe_DEPENDENCIES) 
	@rm -f globe$(EXEEXT)
	$(LINK) $(globe_LDFLAGS) $(globe_OBJECTS) $(globe_LDADD) $(LIBS)
kurt$(EXEEXT): $(kurt_OBJECTS) $(kurt_DEPENDENCIES) 
	@rm -f kurt$(EXEEXT)
	$(LINK) $(kurt_LDFLAGS) $(kurt_OBJECTS) $(kurt_LDADD) $(LIBS)
masonry$(EXEEXT): $(masonry_OBJECTS) $(masonry_DEPENDENCIES) 
	@rm -f masonry$(EXEEXT)
	$(LINK) $(masonry_LDFLAGS) $(masonry_OBJECTS) $(masonry_LDADD) $(LIBS)
molecule$(EXEEXT): $(molecule_OBJECTS) $(molecule_DEPENDENCIES) 
	@rm -f molecule$(EXEEXT)
	$(LINK) $(molecule_LDFLAGS) $(molecule_OBJECTS) $(molecule_LDADD) $(LIBS)
nmgmodel$(EXEEXT): $(nmgmodel_OBJECTS) $(nmgmodel_DEPENDENCIES) 
	@rm -f nmgmodel$(EXEEXT)
	$(LINK) $(nmgmodel_LDFLAGS) $(nmgmodel_OBJECTS) $(nmgmodel_LDADD) $(LIBS)
picket_fence$(EXEEXT): $(picket_fence_OBJECTS) $(picket_fence_DEPENDENCIES) 
	@rm -f picket_fence$(EXEEXT)
	$(LINK) $(picket_fence_LDFLAGS) $(picket_fence_OBJECTS) $(picket_fence_LDADD) $(LIBS)
pipe$(EXEEXT): $(pipe_OBJECTS) $(pipe_DEPENDENCIES) 
	@rm -f pipe$(EXEEXT)
	$(LINK) $(pipe_LDFLAGS) $(pipe_OBJECTS) $(pipe_LDADD) $(LIBS)
pipetest$(EXEEXT): $(pipetest_OBJECTS) $(pipetest_DEPENDENCIES) 
	@rm -f pipetest$(EXEEXT)
	$(LINK) $(pipetest_LDFLAGS) $(pipetest_OBJECTS) $(pipetest_LDADD) $(LIBS)
pix2g$(EXEEXT): $(pix2g_OBJECTS) $(pix2g_DEPENDENCIES) 
	@rm -f pix2g$(EXEEXT)
	$(LINK) $(pix2g_LDFLAGS) $(pix2g_OBJECTS) $(pix2g_LDADD) $(LIBS)
pyramid$(EXEEXT): $(pyramid_OBJECTS) $(pyramid_DEPENDENCIES) 
	@rm -f pyramid$(EXEEXT)
	$(LINK) $(pyramid_LDFLAGS) $(pyramid_OBJECTS) $(pyramid_LDADD) $(LIBS)
rawbot$(EXEEXT): $(rawbot_OBJECTS) $(rawbot_DEPENDENCIES) 
	@rm -f rawbot$(EXEEXT)
	$(LINK) $(rawbot_LDFLAGS) $(rawbot_OBJECTS) $(rawbot_LDADD) $(LIBS)
room$(EXEEXT): $(room_OBJECTS) $(room_DEPENDENCIES) 
	@rm -f room$(EXEEXT)
	$(LINK) $(room_LDFLAGS) $(room_OBJECTS) $(room_LDADD) $(LIBS)
sketch$(EXEEXT): $(sketch_OBJECTS) $(sketch_DEPENDENCIES) 
	@rm -f sketch$(EXEEXT)
	$(LINK) $(sketch_LDFLAGS) $(sketch_OBJECTS) $(sketch_LDADD) $(LIBS)
sphflake$(EXEEXT): $(sphflake_OBJECTS) $(sphflake_DEPENDENCIES) 
	@rm -f sphflake$(EXEEXT)
	$(LINK) $(sphflake_LDFLAGS) $(sphflake_OBJECTS) $(sphflake_LDADD) $(LIBS)
spltest$(EXEEXT): $(spltest_OBJECTS) $(spltest_DEPENDENCIES) 
	@rm -f spltest$(EXEEXT)
	$(LINK) $(spltest_LDFLAGS) $(spltest_OBJECTS) $(spltest_LDADD) $(LIBS)
tea$(EXEEXT): $(tea_OBJECTS) $(tea_DEPENDENCIES) 
	@rm -f tea$(EXEEXT)
	$(LINK) $(tea_LDFLAGS) $(tea_OBJECTS) $(tea_LDADD) $(LIBS)
tea_nmg$(EXEEXT): $(tea_nmg_OBJECTS) $(tea_nmg_DEPENDENCIES) 
	@rm -f tea_nmg$(EXEEXT)
	$(LINK) $(tea_nmg_LDFLAGS) $(tea_nmg_OBJECTS) $(tea_nmg_LDADD) $(LIBS)
terrain$(EXEEXT): $(terrain_OBJECTS) $(terrain_DEPENDENCIES) 
	@rm -f terrain$(EXEEXT)
	$(LINK) $(terrain_LDFLAGS) $(terrain_OBJECTS) $(terrain_LDADD) $(LIBS)
tire$(EXEEXT): $(tire_OBJECTS) $(tire_DEPENDENCIES) 
	@rm -f tire$(EXEEXT)
	$(LINK) $(tire_LDFLAGS) $(tire_OBJECTS) $(tire_LDADD) $(LIBS)
torii$(EXEEXT): $(torii_OBJECTS) $(torii_DEPENDENCIES) 
	@rm -f torii$(EXEEXT)
	$(LINK) $(torii_LDFLAGS) $(torii_OBJECTS) $(torii_LDADD) $(LIBS)
tube$(EXEEXT): $(tube_OBJECTS) $(tube_DEPENDENCIES) 
	@rm -f tube$(EXEEXT)
	$(LINK) $(tube_LDFLAGS) $(tube_OBJECTS) $(tube_LDADD) $(LIBS)
vegitation$(EXEEXT): $(vegitation_OBJECTS) $(vegitation_DEPENDENCIES) 
	@rm -f vegitation$(EXEEXT)
	$(LINK) $(vegitation_LDFLAGS) $(vegitation_OBJECTS) $(vegitation_LDADD) $(LIBS)
wdb_example$(EXEEXT): $(wdb_example_OBJECTS) $(wdb_example_DEPENDENCIES) 
	@rm -f wdb_example$(EXEEXT)
	$(LINK) $(wdb_example_LDFLAGS) $(wdb_example_OBJECTS) $(wdb_example_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bottest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brep_cube-brep_cube.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brep_simple-brep_simple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/breplicator-breplicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brickwall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clutter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contours.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/globe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kurt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/masonry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/molecule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nmgmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/picket_fence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pipetest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pix2g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pyramid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rawbot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/room.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sketch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sphflake.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spltest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tea.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tea_nmg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terrain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tire.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/torii.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tube.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vegitation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wdb_example.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

brep_cube-brep_cube.o: brep_cube.cpp
@AMDEP_TRUE@	source='brep_cube.cpp' object='brep_cube-brep_cube.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/brep_cube-brep_cube.Po' tmpdepfile='$(DEPDIR)/brep_cube-brep_cube.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(brep_cube_CXXFLAGS) $(CXXFLAGS) -c -o brep_cube-brep_cube.o `test -f 'brep_cube.cpp' || echo '$(srcdir)/'`brep_cube.cpp

brep_cube-brep_cube.obj: brep_cube.cpp
@AMDEP_TRUE@	source='brep_cube.cpp' object='brep_cube-brep_cube.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/brep_cube-brep_cube.Po' tmpdepfile='$(DEPDIR)/brep_cube-brep_cube.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(brep_cube_CXXFLAGS) $(CXXFLAGS) -c -o brep_cube-brep_cube.obj `cygpath -w brep_cube.cpp`

brep_cube-brep_cube.lo: brep_cube.cpp
@AMDEP_TRUE@	source='brep_cube.cpp' object='brep_cube-brep_cube.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/brep_cube-brep_cube.Plo' tmpdepfile='$(DEPDIR)/brep_cube-brep_cube.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(brep_cube_CXXFLAGS) $(CXXFLAGS) -c -o brep_cube-brep_cube.lo `test -f 'brep_cube.cpp' || echo '$(srcdir)/'`brep_cube.cpp

brep_simple-brep_simple.o: brep_simple.cpp
@AMDEP_TRUE@	source='brep_simple.cpp' object='brep_simple-brep_simple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/brep_simple-brep_simple.Po' tmpdepfile='$(DEPDIR)/brep_simple-brep_simple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(brep_simple_CXXFLAGS) $(CXXFLAGS) -c -o brep_simple-brep_simple.o `test -f 'brep_simple.cpp' || echo '$(srcdir)/'`brep_simple.cpp

brep_simple-brep_simple.obj: brep_simple.cpp
@AMDEP_TRUE@	source='brep_simple.cpp' object='brep_simple-brep_simple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/brep_simple-brep_simple.Po' tmpdepfile='$(DEPDIR)/brep_simple-brep_simple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(brep_simple_CXXFLAGS) $(CXXFLAGS) -c -o brep_simple-brep_simple.obj `cygpath -w brep_simple.cpp`

brep_simple-brep_simple.lo: brep_simple.cpp
@AMDEP_TRUE@	source='brep_simple.cpp' object='brep_simple-brep_simple.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/brep_simple-brep_simple.Plo' tmpdepfile='$(DEPDIR)/brep_simple-brep_simple.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(brep_simple_CXXFLAGS) $(CXXFLAGS) -c -o brep_simple-brep_simple.lo `test -f 'brep_simple.cpp' || echo '$(srcdir)/'`brep_simple.cpp

breplicator-breplicator.o: breplicator.cpp
@AMDEP_TRUE@	source='breplicator.cpp' object='breplicator-breplicator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/breplicator-breplicator.Po' tmpdepfile='$(DEPDIR)/breplicator-breplicator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(breplicator_CXXFLAGS) $(CXXFLAGS) -c -o breplicator-breplicator.o `test -f 'breplicator.cpp' || echo '$(srcdir)/'`breplicator.cpp

breplicator-breplicator.obj: breplicator.cpp
@AMDEP_TRUE@	source='breplicator.cpp' object='breplicator-breplicator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/breplicator-breplicator.Po' tmpdepfile='$(DEPDIR)/breplicator-breplicator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(breplicator_CXXFLAGS) $(CXXFLAGS) -c -o breplicator-breplicator.obj `cygpath -w breplicator.cpp`

breplicator-breplicator.lo: breplicator.cpp
@AMDEP_TRUE@	source='breplicator.cpp' object='breplicator-breplicator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/breplicator-breplicator.Plo' tmpdepfile='$(DEPDIR)/breplicator-breplicator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(breplicator_CXXFLAGS) $(CXXFLAGS) -c -o breplicator-breplicator.lo `test -f 'breplicator.cpp' || echo '$(srcdir)/'`breplicator.cpp
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

man1dir = $(mandir)/man1
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst"; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man1dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man1dir)/$$inst; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(man1dir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-man

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man: install-man1

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am uninstall-man

uninstall-man: uninstall-man1

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-man1 install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-man uninstall-man1


.PHONY: fast fast-am fast-recursive noprod prodclean prodclean-recursive depends

#
# compile all sources first, then link on a second pass.  requires 2x
# disk space to account for uncertainty on whether the objects are for
# a library or an executable.
#
fast: fast-recursive

fast-am: $(FAST_OBJECTS) all-am

fast-recursive:
	@list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) fast); \
	done
	@$(MAKE) $(AM_MAKEFLAGS) fast-am

#
# remove all of the build targets (binaries and libraries)
#
noprod: prodclean

prodclean: prodclean-recursive
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo "rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo "rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@list='$(EXTRA_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo "rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@if test ! -z "$(lib_LTLIBRARIES)" ; then echo rm -f $(lib_LTLIBRARIES) && rm -f $(lib_LTLIBRARIES) ; fi
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
	@if test ! -z "$(noinst_LTLIBRARIES)" ; then echo rm -f $(noinst_LTLIBRARIES) && rm -f $(noinst_LTLIBRARIES) ; fi
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
	@if test ! -z "$(lib_LIBRARIES)" ; then echo rm -f $(lib_LIBRARIES) && rm -f $(lib_LIBRARIES) ; fi
	@if test ! -z "$(noinst_LIBRARIES)" ; then echo rm -f $(noinst_LIBRARIES) && rm -f $(noinst_LIBRARIES) ; fi

prodclean-recursive:
	@list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) prodclean); \
	done

depends:
	for dep in ${DEPS} ${DEPENDS} ; do echo "$$dep" ; (cd ${top_builddir}/$$dep && $(MAKE) $(AM_MAKEFLAGS) depends all) ; done

install-depends:
	for dep in ${DEPS} ${DEPENDS} ; do echo "$$dep" ; (cd ${top_builddir}/$$dep && $(MAKE) $(AM_MAKEFLAGS) install-depends install) ; done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
