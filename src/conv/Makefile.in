# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 32065 2008-07-29 16:41:54Z starseeker $
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AWK = @AWK@
BCEDITOR = @BCEDITOR@
BC_ARG0 = @BC_ARG0@
BC_ARGS = @BC_ARGS@
BLT = @BLT@
BLT_LIBRARY = @BLT_LIBRARY@
BLT_SUFFIX = @BLT_SUFFIX@
BLT_VERSION = @BLT_VERSION@
BN = @BN@
BN_LIBS = @BN_LIBS@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BRLCAD = @BRLCAD@
BRLCAD_DATA = @BRLCAD_DATA@
BRLCAD_LIBS = @BRLCAD_LIBS@
BRLCAD_ROOT = @BRLCAD_ROOT@
BRLCAD_VERSION = @BRLCAD_VERSION@
BU = @BU@
BU_LIBS = @BU_LIBS@
CC = @CC@
CONFIG_CACHE = @CONFIG_CACHE@
CONFIG_DATE = @CONFIG_DATE@
CONFIG_DAY = @CONFIG_DAY@
CONFIG_MONTH = @CONFIG_MONTH@
CONFIG_TS = @CONFIG_TS@
CONFIG_YEAR = @CONFIG_YEAR@
CP = @CP@
CPP = @CPP@
CURSOR = @CURSOR@
CURSOR_LIBS = @CURSOR_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DM = @DM@
DM_LIBS = @DM_LIBS@
DTRACE = @DTRACE@
DTRACE_HDR = @DTRACE_HDR@
DTRACE_OBJ = @DTRACE_OBJ@
DTRACE_SRC = @DTRACE_SRC@
ECHO = @ECHO@
ECHO_N = @ECHO_N@
EGREP = @EGREP@
F77 = @F77@
FB = @FB@
FB_LIBS = @FB_LIBS@
FEXCEPTIONS = @FEXCEPTIONS@
FFT = @FFT@
FFT_LIBS = @FFT_LIBS@
FRAMEWORK_CARBON = @FRAMEWORK_CARBON@
FRAMEWORK_COREFOUNDATION = @FRAMEWORK_COREFOUNDATION@
FRAMEWORK_JAVAVM = @FRAMEWORK_JAVAVM@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GED = @GED@
GED_LIBS = @GED_LIBS@
GL_CFLAGS = @GL_CFLAGS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ITCL = @ITCL@
ITCL_CPPFLAGS = @ITCL_CPPFLAGS@
ITCL_LIB_FILE = @ITCL_LIB_FILE@
ITCL_VERSION = @ITCL_VERSION@
ITK = @ITK@
ITK_CPPFLAGS = @ITK_CPPFLAGS@
ITK_LIB_FILE = @ITK_LIB_FILE@
IWIDGETS_VERSION = @IWIDGETS_VERSION@
JAVA_CFLAGS = @JAVA_CFLAGS@
JAVA_LDFLAGS = @JAVA_LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBDL = @LIBDL@
LIBDS = @LIBDS@
LIBGEN = @LIBGEN@
LIBGL = @LIBGL@
LIBITCL = @LIBITCL@
LIBITK = @LIBITK@
LIBL = @LIBL@
LIBM = @LIBM@
LIBMALLOC = @LIBMALLOC@
LIBMX = @LIBMX@
LIBNSL = @LIBNSL@
LIBOPENNURBS = @LIBOPENNURBS@
LIBPNG = @LIBPNG@
LIBREGEX = @LIBREGEX@
LIBSGIGL = @LIBSGIGL@
LIBSOCKET = @LIBSOCKET@
LIBSTDCXX = @LIBSTDCXX@
LIBTCL = @LIBTCL@
LIBTHREAD = @LIBTHREAD@
LIBTK = @LIBTK@
LIBTOOL = @LIBTOOL@
LIBTOOLFLAGS = @LIBTOOLFLAGS@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIBWGL = @LIBWGL@
LIBZ = @LIBZ@
LIBZ_CPPFLAGS = @LIBZ_CPPFLAGS@
LN_S = @LN_S@
MAINT = @MAINT@
MKDIR_P = @MKDIR_P@
MULTISPECTRAL = @MULTISPECTRAL@
MULTISPECTRAL_LIBS = @MULTISPECTRAL_LIBS@
MV = @MV@
OBJDUMP = @OBJDUMP@
OPENNURBS = @OPENNURBS@
OPENNURBS_CPPFLAGS = @OPENNURBS_CPPFLAGS@
OPTICAL = @OPTICAL@
OPTICAL_LIBS = @OPTICAL_LIBS@
ORLE = @ORLE@
ORLE_LIBS = @ORLE_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_NAME = @PACKAGE_NAME@
PKG = @PKG@
PKG_LIBS = @PKG_LIBS@
PNG = @PNG@
PNG_CPPFLAGS = @PNG_CPPFLAGS@
PRO_ENGINEER_DIR = @PRO_ENGINEER_DIR@
RANLIB = @RANLIB@
RC = @RC@
REGEX = @REGEX@
REGEX_CPPFLAGS = @REGEX_CPPFLAGS@
RLE = @RLE@
RLE_CPPFLAGS = @RLE_CPPFLAGS@
RM = @RM@
RT = @RT@
RT_LIBS = @RT_LIBS@
SAMPLE_APPLICATIONS_DIR = @SAMPLE_APPLICATIONS_DIR@
SH = @SH@
SSE = @SSE@
STRIP = @STRIP@
SYSV = @SYSV@
SYSV_LIBS = @SYSV_LIBS@
TCL = @TCL@
TCLCAD = @TCLCAD@
TCLCAD_LIBS = @TCLCAD_LIBS@
TCLSTUB = @TCLSTUB@
TCL_CPPFLAGS = @TCL_CPPFLAGS@
TCL_PATH = @TCL_PATH@
TCL_VERSION = @TCL_VERSION@
TERMIO = @TERMIO@
TERMIO_LIBS = @TERMIO_LIBS@
TERMLIB = @TERMLIB@
TERMLIB_CPPFLAGS = @TERMLIB_CPPFLAGS@
TK = @TK@
TKIMG = @TKIMG@
TKIMG_VERSION = @TKIMG_VERSION@
TKSTUB = @TKSTUB@
TK_CPPFLAGS = @TK_CPPFLAGS@
TK_PATH = @TK_PATH@
TK_VERSION = @TK_VERSION@
TNT_CPPFLAGS = @TNT_CPPFLAGS@
U = @U@
VERSION = @VERSION@
WDB = @WDB@
WDB_LIBS = @WDB_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PREFIX = @X_PREFIX@
X_PRE_LIBS = @X_PRE_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
mkdir_p = @mkdir_p@

AM_CPPFLAGS = ${TCL_CPPFLAGS}

COMMON_EXTRA = \
	dbclean.sh \
	Formats.csv


@ONLY_BENCHMARK_TRUE@SUBDIRS = 
@ONLY_BENCHMARK_FALSE@SUBDIRS = \
@ONLY_BENCHMARK_FALSE@        3dm \
@ONLY_BENCHMARK_FALSE@	comgeom \
@ONLY_BENCHMARK_FALSE@	iges \
@ONLY_BENCHMARK_FALSE@	jack \
@ONLY_BENCHMARK_FALSE@	off \
@ONLY_BENCHMARK_FALSE@	patch


@ONLY_BENCHMARK_TRUE@bin_PROGRAMS = \
@ONLY_BENCHMARK_TRUE@	asc2g \
@ONLY_BENCHMARK_TRUE@	asc2pix \
@ONLY_BENCHMARK_TRUE@	g2asc \
@ONLY_BENCHMARK_TRUE@	pix2asc

@ONLY_BENCHMARK_FALSE@bin_PROGRAMS = \
@ONLY_BENCHMARK_FALSE@	asc-nmg \
@ONLY_BENCHMARK_FALSE@	asc2g \
@ONLY_BENCHMARK_FALSE@	asc2pix \
@ONLY_BENCHMARK_FALSE@	bot-bldxf \
@ONLY_BENCHMARK_FALSE@	bot-raw \
@ONLY_BENCHMARK_FALSE@	bot_shell-vtk \
@ONLY_BENCHMARK_FALSE@	conv-vg2g \
@ONLY_BENCHMARK_FALSE@	cy-g \
@ONLY_BENCHMARK_FALSE@	dbupgrade \
@ONLY_BENCHMARK_FALSE@	dxf-g \
@ONLY_BENCHMARK_FALSE@	enf-g \
@ONLY_BENCHMARK_FALSE@	euclid-g \
@ONLY_BENCHMARK_FALSE@	euclid_format \
@ONLY_BENCHMARK_FALSE@	euclid_unformat \
@ONLY_BENCHMARK_FALSE@	fast4-g \
@ONLY_BENCHMARK_FALSE@	g-acad \
@ONLY_BENCHMARK_FALSE@	g-adrt \
@ONLY_BENCHMARK_FALSE@	g-dxf \
@ONLY_BENCHMARK_FALSE@	g-euclid \
@ONLY_BENCHMARK_FALSE@	g-euclid1 \
@ONLY_BENCHMARK_FALSE@	g-var \
@ONLY_BENCHMARK_FALSE@	g-nff \
@ONLY_BENCHMARK_FALSE@	g-nmg \
@ONLY_BENCHMARK_FALSE@	g-obj \
@ONLY_BENCHMARK_FALSE@	g-shell.rect \
@ONLY_BENCHMARK_FALSE@	g-stl \
@ONLY_BENCHMARK_FALSE@	g-tankill \
@ONLY_BENCHMARK_FALSE@	g-vrml \
@ONLY_BENCHMARK_FALSE@	g-x3d \
@ONLY_BENCHMARK_FALSE@	g2asc \
@ONLY_BENCHMARK_FALSE@	nastran-g \
@ONLY_BENCHMARK_FALSE@	nmg-bot \
@ONLY_BENCHMARK_FALSE@	nmg-rib \
@ONLY_BENCHMARK_FALSE@	nmg-sgp \
@ONLY_BENCHMARK_FALSE@	pix2asc \
@ONLY_BENCHMARK_FALSE@	ply-g \
@ONLY_BENCHMARK_FALSE@	poly-bot \
@ONLY_BENCHMARK_FALSE@	proe-g \
@ONLY_BENCHMARK_FALSE@	stl-g \
@ONLY_BENCHMARK_FALSE@	tankill-g \
@ONLY_BENCHMARK_FALSE@	viewpoint-g


@ONLY_BENCHMARK_TRUE@EXTRA_DIST = 
@ONLY_BENCHMARK_FALSE@EXTRA_DIST = \
@ONLY_BENCHMARK_FALSE@	$(COMMON_EXTRA)


@ONLY_BENCHMARK_FALSE@noinst_PROGRAMS = \
@ONLY_BENCHMARK_FALSE@	g4-g5 \
@ONLY_BENCHMARK_FALSE@	g5-g4 \
@ONLY_BENCHMARK_FALSE@	g-xxx \
@ONLY_BENCHMARK_FALSE@	g-xxx_facets \
@ONLY_BENCHMARK_FALSE@	walk_example


# end ONLY_BENCHMARK

# static is required to avoid MIPSpro 7.3 long rpath linker bug
@LINK_STATIC_REQUIRED_TRUE@asc2g_LDFLAGS = -static
@LINK_STATIC_REQUIRED_FALSE@asc2g_LDFLAGS = 

asc2g_SOURCES = asc2g.c
asc2g_LDADD = ${WDB} ${GED}

asc2pix_SOURCES = asc2pix.c

asc_nmg_SOURCES = asc-nmg.c
asc_nmg_LDADD = ${WDB}

bot_bldxf_SOURCES = bot-bldxf.c
bot_bldxf_LDADD = ${RT}

bot_raw_SOURCES = bot-raw.c
bot_raw_LDADD = ${RT}

bot_shell_vtk_SOURCES = bot_shell-vtk.c
bot_shell_vtk_LDADD = ${RT}

conv_vg2g_SOURCES = conv-vg2g.c
conv_vg2g_LDADD = ${BU} ${SYSV}

cy_g_SOURCES = cy-g.c
cy_g_LDADD = ${WDB}

dbupgrade_SOURCES = dbupgrade.c
dbupgrade_LDADD = ${WDB}

dxf_g_SOURCES = dxf-g.c
dxf_g_LDADD = ${WDB}

enf_g_SOURCES = enf-g.c
enf_g_LDADD = ${WDB}

euclid_format_SOURCES = euclid_format.c
euclid_format_LDADD = ${RT}

euclid_g_SOURCES = euclid-g.c
euclid_g_LDADD = ${WDB}

euclid_unformat_SOURCES = euclid_unformat.c
euclid_unformat_LDADD = ${BU} ${SYSV}

fast4_g_SOURCES = fast4-g.c
fast4_g_LDADD = ${WDB}

g2asc_SOURCES = g2asc.c
g2asc_LDADD = ${WDB}

g4_g5_SOURCES = g4-g5.c
g4_g5_LDADD = ${WDB}

g5_g4_SOURCES = g5-g4.c
g5_g4_LDADD = ${WDB}

g_acad_SOURCES = g-acad.c
g_acad_LDADD = ${WDB}

g_adrt_SOURCES = g-adrt.c
g_adrt_LDADD = ${WDB}

g_dxf_SOURCES = g-dxf.c
g_dxf_LDADD = ${WDB}

g_euclid1_SOURCES = g-euclid1.c
g_euclid1_LDADD = ${RT}

g_euclid_SOURCES = g-euclid.c
g_euclid_LDADD = ${RT}

g_nff_SOURCES = g-nff.c
g_nff_LDADD = ${WDB}

g_nmg_SOURCES = g-nmg.c
g_nmg_LDADD = ${WDB}

g_obj_SOURCES = g-obj.c
g_obj_LDADD = ${WDB}

g_shell_rect_SOURCES = g-shell.rect.c
g_shell_rect_LDADD = ${WDB}

g_stl_SOURCES = g-stl.c
g_stl_LDADD = ${WDB}

g_tankill_SOURCES = g-tankill.c
g_tankill_LDADD = ${RT}

g_var_SOURCES = g-var.c
g_var_LDADD = ${RT}

g_vrml_SOURCES = g-vrml.c
g_vrml_LDADD = ${WDB}

g_x3d_SOURCES = g-x3d.c
g_x3d_LDADD = ${WDB}

g_xxx_SOURCES = g-xxx.c
g_xxx_LDADD = ${WDB}

g_xxx_facets_SOURCES = g-xxx_facets.c
g_xxx_facets_LDADD = ${WDB}

nastran_g_SOURCES = nastran-g.c
nastran_g_LDADD = ${WDB}

nmg_bot_SOURCES = nmg-bot.c
nmg_bot_LDADD = ${WDB}

nmg_rib_SOURCES = nmg-rib.c
nmg_rib_LDADD = ${WDB}

nmg_sgp_SOURCES = nmg-sgp.c
nmg_sgp_LDADD = ${WDB}

pix2asc_SOURCES = pix2asc.c

ply_g_SOURCES = ply-g.c
ply_g_LDADD = ${WDB}

poly_bot_SOURCES = poly-bot.c
poly_bot_LDADD = ${WDB}

proe_g_SOURCES = proe-g.c
proe_g_LDADD = ${WDB}

stl_g_SOURCES = stl-g.c
stl_g_LDADD = ${WDB}

tankill_g_SOURCES = tankill-g.c
tankill_g_LDADD = ${WDB}

viewpoint_g_SOURCES = viewpoint-g.c
viewpoint_g_LDADD = ${WDB}

walk_example_SOURCES = walk_example.c
walk_example_LDADD = ${RT}

dist_bin_SCRIPTS = intaval-g.py

dist_man_MANS = \
	asc-nmg.1 \
	bot_shell-vtk.1 \
	conv-vg2g.1 \
	cy-g.1 \
	dbclean.1 \
	dbupgrade.1 \
	dxf-g.1 \
	enf-g.1 \
	euclid-g.1 \
	fast4-g.1 \
	g-acad.1 \
	g-dxf.1 \
	g-euclid.1 \
	g-var.1 \
	g-nff.1 \
	g-nmg.1 \
	g-obj.1 \
	g-shell.rect.1 \
	g-stl.1 \
	g-tankill.1 \
	g-vrml.1 \
	g-x3d.1 \
	g2asc.1 \
	nastran-g.1 \
	nmg-bot.1 \
	nmg-rib.1 \
	pix2asc.1 \
	ply-g.1 \
	poly-bot.1 \
	proe-g.1 \
	stl-g.1 \
	tankill-g.1 \
	viewpoint-g.1


sample_applicationsdir = $(SAMPLE_APPLICATIONS_DIR)

sample_applications_DATA = \
	g-xxx.c \
	g-xxx_facets.c


DEPS = src/libwdb src/librt

@ONLY_BENCHMARK_TRUE@FAST_OBJECTS = \
@ONLY_BENCHMARK_TRUE@	$(asc2g_OBJECTS) \
@ONLY_BENCHMARK_TRUE@	$(asc2pix_OBJECTS) \
@ONLY_BENCHMARK_TRUE@	$(g2asc_OBJECTS) \
@ONLY_BENCHMARK_TRUE@	$(pix2asc_OBJECTS) \
@ONLY_BENCHMARK_TRUE@	$(bin_PROGRAMS)

@ONLY_BENCHMARK_FALSE@FAST_OBJECTS = \
@ONLY_BENCHMARK_FALSE@	$(asc2g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(asc2pix_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(asc_nmg_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(bot_bldxf_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(bot_raw_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(bot_shell_vtk_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(conv_vg2g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(cy_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(dbupgrade_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(dxf_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(enf_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(euclid_format_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(euclid_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(euclid_unformat_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(fast4_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g2asc_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g4_g5_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g5_g4_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_acad_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_adrt_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_dxf_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_euclid1_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_euclid_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_nff_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_nmg_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_obj_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_shell_rect_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_stl_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_tankill_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_var_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_vrml_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_x3d_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_xxx_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(g_xxx_facets_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(nastran_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(nmg_bot_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(nmg_rib_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(nmg_sgp_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(pix2asc_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(ply_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(poly_bot_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(proe_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(stl_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(tankill_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(viewpoint_g_OBJECTS) \
@ONLY_BENCHMARK_FALSE@	$(bin_PROGRAMS)

subdir = src/conv
mkinstalldirs = $(SHELL) $(top_srcdir)/misc/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/brlcad_config.h
CONFIG_CLEAN_FILES =
@ONLY_BENCHMARK_TRUE@bin_PROGRAMS = asc2g$(EXEEXT) asc2pix$(EXEEXT) \
@ONLY_BENCHMARK_TRUE@	g2asc$(EXEEXT) pix2asc$(EXEEXT)
@ONLY_BENCHMARK_FALSE@bin_PROGRAMS = asc-nmg$(EXEEXT) asc2g$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	asc2pix$(EXEEXT) bot-bldxf$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	bot-raw$(EXEEXT) bot_shell-vtk$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	conv-vg2g$(EXEEXT) cy-g$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	dbupgrade$(EXEEXT) dxf-g$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	enf-g$(EXEEXT) euclid-g$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	euclid_format$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	euclid_unformat$(EXEEXT) fast4-g$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-acad$(EXEEXT) g-adrt$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-dxf$(EXEEXT) g-euclid$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-euclid1$(EXEEXT) g-var$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-nff$(EXEEXT) g-nmg$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-obj$(EXEEXT) g-shell.rect$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-stl$(EXEEXT) g-tankill$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-vrml$(EXEEXT) g-x3d$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g2asc$(EXEEXT) nastran-g$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	nmg-bot$(EXEEXT) nmg-rib$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	nmg-sgp$(EXEEXT) pix2asc$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	ply-g$(EXEEXT) poly-bot$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	proe-g$(EXEEXT) stl-g$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	tankill-g$(EXEEXT) viewpoint-g$(EXEEXT)
@ONLY_BENCHMARK_TRUE@noinst_PROGRAMS =
@ONLY_BENCHMARK_FALSE@noinst_PROGRAMS = g4-g5$(EXEEXT) g5-g4$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	g-xxx$(EXEEXT) g-xxx_facets$(EXEEXT) \
@ONLY_BENCHMARK_FALSE@	walk_example$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)

am_asc_nmg_OBJECTS = asc-nmg.$(OBJEXT)
asc_nmg_OBJECTS = $(am_asc_nmg_OBJECTS)
asc_nmg_DEPENDENCIES =
asc_nmg_LDFLAGS =
am_asc2g_OBJECTS = asc2g.$(OBJEXT)
asc2g_OBJECTS = $(am_asc2g_OBJECTS)
asc2g_DEPENDENCIES =
am_asc2pix_OBJECTS = asc2pix.$(OBJEXT)
asc2pix_OBJECTS = $(am_asc2pix_OBJECTS)
asc2pix_LDADD = $(LDADD)
asc2pix_DEPENDENCIES =
asc2pix_LDFLAGS =
am_bot_bldxf_OBJECTS = bot-bldxf.$(OBJEXT)
bot_bldxf_OBJECTS = $(am_bot_bldxf_OBJECTS)
bot_bldxf_DEPENDENCIES =
bot_bldxf_LDFLAGS =
am_bot_raw_OBJECTS = bot-raw.$(OBJEXT)
bot_raw_OBJECTS = $(am_bot_raw_OBJECTS)
bot_raw_DEPENDENCIES =
bot_raw_LDFLAGS =
am_bot_shell_vtk_OBJECTS = bot_shell-vtk.$(OBJEXT)
bot_shell_vtk_OBJECTS = $(am_bot_shell_vtk_OBJECTS)
bot_shell_vtk_DEPENDENCIES =
bot_shell_vtk_LDFLAGS =
am_conv_vg2g_OBJECTS = conv-vg2g.$(OBJEXT)
conv_vg2g_OBJECTS = $(am_conv_vg2g_OBJECTS)
conv_vg2g_DEPENDENCIES =
conv_vg2g_LDFLAGS =
am_cy_g_OBJECTS = cy-g.$(OBJEXT)
cy_g_OBJECTS = $(am_cy_g_OBJECTS)
cy_g_DEPENDENCIES =
cy_g_LDFLAGS =
am_dbupgrade_OBJECTS = dbupgrade.$(OBJEXT)
dbupgrade_OBJECTS = $(am_dbupgrade_OBJECTS)
dbupgrade_DEPENDENCIES =
dbupgrade_LDFLAGS =
am_dxf_g_OBJECTS = dxf-g.$(OBJEXT)
dxf_g_OBJECTS = $(am_dxf_g_OBJECTS)
dxf_g_DEPENDENCIES =
dxf_g_LDFLAGS =
am_enf_g_OBJECTS = enf-g.$(OBJEXT)
enf_g_OBJECTS = $(am_enf_g_OBJECTS)
enf_g_DEPENDENCIES =
enf_g_LDFLAGS =
am_euclid_g_OBJECTS = euclid-g.$(OBJEXT)
euclid_g_OBJECTS = $(am_euclid_g_OBJECTS)
euclid_g_DEPENDENCIES =
euclid_g_LDFLAGS =
am_euclid_format_OBJECTS = euclid_format.$(OBJEXT)
euclid_format_OBJECTS = $(am_euclid_format_OBJECTS)
euclid_format_DEPENDENCIES =
euclid_format_LDFLAGS =
am_euclid_unformat_OBJECTS = euclid_unformat.$(OBJEXT)
euclid_unformat_OBJECTS = $(am_euclid_unformat_OBJECTS)
euclid_unformat_DEPENDENCIES =
euclid_unformat_LDFLAGS =
am_fast4_g_OBJECTS = fast4-g.$(OBJEXT)
fast4_g_OBJECTS = $(am_fast4_g_OBJECTS)
fast4_g_DEPENDENCIES =
fast4_g_LDFLAGS =
am_g_acad_OBJECTS = g-acad.$(OBJEXT)
g_acad_OBJECTS = $(am_g_acad_OBJECTS)
g_acad_DEPENDENCIES =
g_acad_LDFLAGS =
am_g_adrt_OBJECTS = g-adrt.$(OBJEXT)
g_adrt_OBJECTS = $(am_g_adrt_OBJECTS)
g_adrt_DEPENDENCIES =
g_adrt_LDFLAGS =
am_g_dxf_OBJECTS = g-dxf.$(OBJEXT)
g_dxf_OBJECTS = $(am_g_dxf_OBJECTS)
g_dxf_DEPENDENCIES =
g_dxf_LDFLAGS =
am_g_euclid_OBJECTS = g-euclid.$(OBJEXT)
g_euclid_OBJECTS = $(am_g_euclid_OBJECTS)
g_euclid_DEPENDENCIES =
g_euclid_LDFLAGS =
am_g_euclid1_OBJECTS = g-euclid1.$(OBJEXT)
g_euclid1_OBJECTS = $(am_g_euclid1_OBJECTS)
g_euclid1_DEPENDENCIES =
g_euclid1_LDFLAGS =
am_g_nff_OBJECTS = g-nff.$(OBJEXT)
g_nff_OBJECTS = $(am_g_nff_OBJECTS)
g_nff_DEPENDENCIES =
g_nff_LDFLAGS =
am_g_nmg_OBJECTS = g-nmg.$(OBJEXT)
g_nmg_OBJECTS = $(am_g_nmg_OBJECTS)
g_nmg_DEPENDENCIES =
g_nmg_LDFLAGS =
am_g_obj_OBJECTS = g-obj.$(OBJEXT)
g_obj_OBJECTS = $(am_g_obj_OBJECTS)
g_obj_DEPENDENCIES =
g_obj_LDFLAGS =
am_g_shell_rect_OBJECTS = g-shell.rect.$(OBJEXT)
g_shell_rect_OBJECTS = $(am_g_shell_rect_OBJECTS)
g_shell_rect_DEPENDENCIES =
g_shell_rect_LDFLAGS =
am_g_stl_OBJECTS = g-stl.$(OBJEXT)
g_stl_OBJECTS = $(am_g_stl_OBJECTS)
g_stl_DEPENDENCIES =
g_stl_LDFLAGS =
am_g_tankill_OBJECTS = g-tankill.$(OBJEXT)
g_tankill_OBJECTS = $(am_g_tankill_OBJECTS)
g_tankill_DEPENDENCIES =
g_tankill_LDFLAGS =
am_g_var_OBJECTS = g-var.$(OBJEXT)
g_var_OBJECTS = $(am_g_var_OBJECTS)
g_var_DEPENDENCIES =
g_var_LDFLAGS =
am_g_vrml_OBJECTS = g-vrml.$(OBJEXT)
g_vrml_OBJECTS = $(am_g_vrml_OBJECTS)
g_vrml_DEPENDENCIES =
g_vrml_LDFLAGS =
am_g_x3d_OBJECTS = g-x3d.$(OBJEXT)
g_x3d_OBJECTS = $(am_g_x3d_OBJECTS)
g_x3d_DEPENDENCIES =
g_x3d_LDFLAGS =
am_g_xxx_OBJECTS = g-xxx.$(OBJEXT)
g_xxx_OBJECTS = $(am_g_xxx_OBJECTS)
g_xxx_DEPENDENCIES =
g_xxx_LDFLAGS =
am_g_xxx_facets_OBJECTS = g-xxx_facets.$(OBJEXT)
g_xxx_facets_OBJECTS = $(am_g_xxx_facets_OBJECTS)
g_xxx_facets_DEPENDENCIES =
g_xxx_facets_LDFLAGS =
am_g2asc_OBJECTS = g2asc.$(OBJEXT)
g2asc_OBJECTS = $(am_g2asc_OBJECTS)
g2asc_DEPENDENCIES =
g2asc_LDFLAGS =
am_g4_g5_OBJECTS = g4-g5.$(OBJEXT)
g4_g5_OBJECTS = $(am_g4_g5_OBJECTS)
g4_g5_DEPENDENCIES =
g4_g5_LDFLAGS =
am_g5_g4_OBJECTS = g5-g4.$(OBJEXT)
g5_g4_OBJECTS = $(am_g5_g4_OBJECTS)
g5_g4_DEPENDENCIES =
g5_g4_LDFLAGS =
am_nastran_g_OBJECTS = nastran-g.$(OBJEXT)
nastran_g_OBJECTS = $(am_nastran_g_OBJECTS)
nastran_g_DEPENDENCIES =
nastran_g_LDFLAGS =
am_nmg_bot_OBJECTS = nmg-bot.$(OBJEXT)
nmg_bot_OBJECTS = $(am_nmg_bot_OBJECTS)
nmg_bot_DEPENDENCIES =
nmg_bot_LDFLAGS =
am_nmg_rib_OBJECTS = nmg-rib.$(OBJEXT)
nmg_rib_OBJECTS = $(am_nmg_rib_OBJECTS)
nmg_rib_DEPENDENCIES =
nmg_rib_LDFLAGS =
am_nmg_sgp_OBJECTS = nmg-sgp.$(OBJEXT)
nmg_sgp_OBJECTS = $(am_nmg_sgp_OBJECTS)
nmg_sgp_DEPENDENCIES =
nmg_sgp_LDFLAGS =
am_pix2asc_OBJECTS = pix2asc.$(OBJEXT)
pix2asc_OBJECTS = $(am_pix2asc_OBJECTS)
pix2asc_LDADD = $(LDADD)
pix2asc_DEPENDENCIES =
pix2asc_LDFLAGS =
am_ply_g_OBJECTS = ply-g.$(OBJEXT)
ply_g_OBJECTS = $(am_ply_g_OBJECTS)
ply_g_DEPENDENCIES =
ply_g_LDFLAGS =
am_poly_bot_OBJECTS = poly-bot.$(OBJEXT)
poly_bot_OBJECTS = $(am_poly_bot_OBJECTS)
poly_bot_DEPENDENCIES =
poly_bot_LDFLAGS =
am_proe_g_OBJECTS = proe-g.$(OBJEXT)
proe_g_OBJECTS = $(am_proe_g_OBJECTS)
proe_g_DEPENDENCIES =
proe_g_LDFLAGS =
am_stl_g_OBJECTS = stl-g.$(OBJEXT)
stl_g_OBJECTS = $(am_stl_g_OBJECTS)
stl_g_DEPENDENCIES =
stl_g_LDFLAGS =
am_tankill_g_OBJECTS = tankill-g.$(OBJEXT)
tankill_g_OBJECTS = $(am_tankill_g_OBJECTS)
tankill_g_DEPENDENCIES =
tankill_g_LDFLAGS =
am_viewpoint_g_OBJECTS = viewpoint-g.$(OBJEXT)
viewpoint_g_OBJECTS = $(am_viewpoint_g_OBJECTS)
viewpoint_g_DEPENDENCIES =
viewpoint_g_LDFLAGS =
am_walk_example_OBJECTS = walk_example.$(OBJEXT)
walk_example_OBJECTS = $(am_walk_example_OBJECTS)
walk_example_DEPENDENCIES =
walk_example_LDFLAGS =
SCRIPTS = $(dist_bin_SCRIPTS)


DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/misc/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/asc-nmg.Po ./$(DEPDIR)/asc2g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/asc2pix.Po ./$(DEPDIR)/bot-bldxf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/bot-raw.Po ./$(DEPDIR)/bot_shell-vtk.Po \
@AMDEP_TRUE@	./$(DEPDIR)/conv-vg2g.Po ./$(DEPDIR)/cy-g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dbupgrade.Po ./$(DEPDIR)/dxf-g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/enf-g.Po ./$(DEPDIR)/euclid-g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/euclid_format.Po \
@AMDEP_TRUE@	./$(DEPDIR)/euclid_unformat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fast4-g.Po ./$(DEPDIR)/g-acad.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-adrt.Po ./$(DEPDIR)/g-dxf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-euclid.Po ./$(DEPDIR)/g-euclid1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-nff.Po ./$(DEPDIR)/g-nmg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-obj.Po ./$(DEPDIR)/g-shell.rect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-stl.Po ./$(DEPDIR)/g-tankill.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-var.Po ./$(DEPDIR)/g-vrml.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-x3d.Po ./$(DEPDIR)/g-xxx.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g-xxx_facets.Po ./$(DEPDIR)/g2asc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/g4-g5.Po ./$(DEPDIR)/g5-g4.Po \
@AMDEP_TRUE@	./$(DEPDIR)/nastran-g.Po ./$(DEPDIR)/nmg-bot.Po \
@AMDEP_TRUE@	./$(DEPDIR)/nmg-rib.Po ./$(DEPDIR)/nmg-sgp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pix2asc.Po ./$(DEPDIR)/ply-g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/poly-bot.Po ./$(DEPDIR)/proe-g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stl-g.Po ./$(DEPDIR)/tankill-g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/viewpoint-g.Po \
@AMDEP_TRUE@	./$(DEPDIR)/walk_example.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(asc_nmg_SOURCES) $(asc2g_SOURCES) $(asc2pix_SOURCES) \
	$(bot_bldxf_SOURCES) $(bot_raw_SOURCES) \
	$(bot_shell_vtk_SOURCES) $(conv_vg2g_SOURCES) $(cy_g_SOURCES) \
	$(dbupgrade_SOURCES) $(dxf_g_SOURCES) $(enf_g_SOURCES) \
	$(euclid_g_SOURCES) $(euclid_format_SOURCES) \
	$(euclid_unformat_SOURCES) $(fast4_g_SOURCES) $(g_acad_SOURCES) \
	$(g_adrt_SOURCES) $(g_dxf_SOURCES) $(g_euclid_SOURCES) \
	$(g_euclid1_SOURCES) $(g_nff_SOURCES) $(g_nmg_SOURCES) \
	$(g_obj_SOURCES) $(g_shell_rect_SOURCES) $(g_stl_SOURCES) \
	$(g_tankill_SOURCES) $(g_var_SOURCES) $(g_vrml_SOURCES) \
	$(g_x3d_SOURCES) $(g_xxx_SOURCES) $(g_xxx_facets_SOURCES) \
	$(g2asc_SOURCES) $(g4_g5_SOURCES) $(g5_g4_SOURCES) \
	$(nastran_g_SOURCES) $(nmg_bot_SOURCES) $(nmg_rib_SOURCES) \
	$(nmg_sgp_SOURCES) $(pix2asc_SOURCES) $(ply_g_SOURCES) \
	$(poly_bot_SOURCES) $(proe_g_SOURCES) $(stl_g_SOURCES) \
	$(tankill_g_SOURCES) $(viewpoint_g_SOURCES) \
	$(walk_example_SOURCES)

NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(sample_applications_DATA)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = $(dist_bin_SCRIPTS) $(dist_man_MANS) Makefile.am \
	Makefile.in
DIST_SUBDIRS = 3dm comgeom iges jack off patch
SOURCES = $(asc_nmg_SOURCES) $(asc2g_SOURCES) $(asc2pix_SOURCES) $(bot_bldxf_SOURCES) $(bot_raw_SOURCES) $(bot_shell_vtk_SOURCES) $(conv_vg2g_SOURCES) $(cy_g_SOURCES) $(dbupgrade_SOURCES) $(dxf_g_SOURCES) $(enf_g_SOURCES) $(euclid_g_SOURCES) $(euclid_format_SOURCES) $(euclid_unformat_SOURCES) $(fast4_g_SOURCES) $(g_acad_SOURCES) $(g_adrt_SOURCES) $(g_dxf_SOURCES) $(g_euclid_SOURCES) $(g_euclid1_SOURCES) $(g_nff_SOURCES) $(g_nmg_SOURCES) $(g_obj_SOURCES) $(g_shell_rect_SOURCES) $(g_stl_SOURCES) $(g_tankill_SOURCES) $(g_var_SOURCES) $(g_vrml_SOURCES) $(g_x3d_SOURCES) $(g_xxx_SOURCES) $(g_xxx_facets_SOURCES) $(g2asc_SOURCES) $(g4_g5_SOURCES) $(g5_g4_SOURCES) $(nastran_g_SOURCES) $(nmg_bot_SOURCES) $(nmg_rib_SOURCES) $(nmg_sgp_SOURCES) $(pix2asc_SOURCES) $(ply_g_SOURCES) $(poly_bot_SOURCES) $(proe_g_SOURCES) $(stl_g_SOURCES) $(tankill_g_SOURCES) $(viewpoint_g_SOURCES) $(walk_example_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/misc/Makefile.defs $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/conv/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
asc-nmg$(EXEEXT): $(asc_nmg_OBJECTS) $(asc_nmg_DEPENDENCIES) 
	@rm -f asc-nmg$(EXEEXT)
	$(LINK) $(asc_nmg_LDFLAGS) $(asc_nmg_OBJECTS) $(asc_nmg_LDADD) $(LIBS)
asc2g$(EXEEXT): $(asc2g_OBJECTS) $(asc2g_DEPENDENCIES) 
	@rm -f asc2g$(EXEEXT)
	$(LINK) $(asc2g_LDFLAGS) $(asc2g_OBJECTS) $(asc2g_LDADD) $(LIBS)
asc2pix$(EXEEXT): $(asc2pix_OBJECTS) $(asc2pix_DEPENDENCIES) 
	@rm -f asc2pix$(EXEEXT)
	$(LINK) $(asc2pix_LDFLAGS) $(asc2pix_OBJECTS) $(asc2pix_LDADD) $(LIBS)
bot-bldxf$(EXEEXT): $(bot_bldxf_OBJECTS) $(bot_bldxf_DEPENDENCIES) 
	@rm -f bot-bldxf$(EXEEXT)
	$(LINK) $(bot_bldxf_LDFLAGS) $(bot_bldxf_OBJECTS) $(bot_bldxf_LDADD) $(LIBS)
bot-raw$(EXEEXT): $(bot_raw_OBJECTS) $(bot_raw_DEPENDENCIES) 
	@rm -f bot-raw$(EXEEXT)
	$(LINK) $(bot_raw_LDFLAGS) $(bot_raw_OBJECTS) $(bot_raw_LDADD) $(LIBS)
bot_shell-vtk$(EXEEXT): $(bot_shell_vtk_OBJECTS) $(bot_shell_vtk_DEPENDENCIES) 
	@rm -f bot_shell-vtk$(EXEEXT)
	$(LINK) $(bot_shell_vtk_LDFLAGS) $(bot_shell_vtk_OBJECTS) $(bot_shell_vtk_LDADD) $(LIBS)
conv-vg2g$(EXEEXT): $(conv_vg2g_OBJECTS) $(conv_vg2g_DEPENDENCIES) 
	@rm -f conv-vg2g$(EXEEXT)
	$(LINK) $(conv_vg2g_LDFLAGS) $(conv_vg2g_OBJECTS) $(conv_vg2g_LDADD) $(LIBS)
cy-g$(EXEEXT): $(cy_g_OBJECTS) $(cy_g_DEPENDENCIES) 
	@rm -f cy-g$(EXEEXT)
	$(LINK) $(cy_g_LDFLAGS) $(cy_g_OBJECTS) $(cy_g_LDADD) $(LIBS)
dbupgrade$(EXEEXT): $(dbupgrade_OBJECTS) $(dbupgrade_DEPENDENCIES) 
	@rm -f dbupgrade$(EXEEXT)
	$(LINK) $(dbupgrade_LDFLAGS) $(dbupgrade_OBJECTS) $(dbupgrade_LDADD) $(LIBS)
dxf-g$(EXEEXT): $(dxf_g_OBJECTS) $(dxf_g_DEPENDENCIES) 
	@rm -f dxf-g$(EXEEXT)
	$(LINK) $(dxf_g_LDFLAGS) $(dxf_g_OBJECTS) $(dxf_g_LDADD) $(LIBS)
enf-g$(EXEEXT): $(enf_g_OBJECTS) $(enf_g_DEPENDENCIES) 
	@rm -f enf-g$(EXEEXT)
	$(LINK) $(enf_g_LDFLAGS) $(enf_g_OBJECTS) $(enf_g_LDADD) $(LIBS)
euclid-g$(EXEEXT): $(euclid_g_OBJECTS) $(euclid_g_DEPENDENCIES) 
	@rm -f euclid-g$(EXEEXT)
	$(LINK) $(euclid_g_LDFLAGS) $(euclid_g_OBJECTS) $(euclid_g_LDADD) $(LIBS)
euclid_format$(EXEEXT): $(euclid_format_OBJECTS) $(euclid_format_DEPENDENCIES) 
	@rm -f euclid_format$(EXEEXT)
	$(LINK) $(euclid_format_LDFLAGS) $(euclid_format_OBJECTS) $(euclid_format_LDADD) $(LIBS)
euclid_unformat$(EXEEXT): $(euclid_unformat_OBJECTS) $(euclid_unformat_DEPENDENCIES) 
	@rm -f euclid_unformat$(EXEEXT)
	$(LINK) $(euclid_unformat_LDFLAGS) $(euclid_unformat_OBJECTS) $(euclid_unformat_LDADD) $(LIBS)
fast4-g$(EXEEXT): $(fast4_g_OBJECTS) $(fast4_g_DEPENDENCIES) 
	@rm -f fast4-g$(EXEEXT)
	$(LINK) $(fast4_g_LDFLAGS) $(fast4_g_OBJECTS) $(fast4_g_LDADD) $(LIBS)
g-acad$(EXEEXT): $(g_acad_OBJECTS) $(g_acad_DEPENDENCIES) 
	@rm -f g-acad$(EXEEXT)
	$(LINK) $(g_acad_LDFLAGS) $(g_acad_OBJECTS) $(g_acad_LDADD) $(LIBS)
g-adrt$(EXEEXT): $(g_adrt_OBJECTS) $(g_adrt_DEPENDENCIES) 
	@rm -f g-adrt$(EXEEXT)
	$(LINK) $(g_adrt_LDFLAGS) $(g_adrt_OBJECTS) $(g_adrt_LDADD) $(LIBS)
g-dxf$(EXEEXT): $(g_dxf_OBJECTS) $(g_dxf_DEPENDENCIES) 
	@rm -f g-dxf$(EXEEXT)
	$(LINK) $(g_dxf_LDFLAGS) $(g_dxf_OBJECTS) $(g_dxf_LDADD) $(LIBS)
g-euclid$(EXEEXT): $(g_euclid_OBJECTS) $(g_euclid_DEPENDENCIES) 
	@rm -f g-euclid$(EXEEXT)
	$(LINK) $(g_euclid_LDFLAGS) $(g_euclid_OBJECTS) $(g_euclid_LDADD) $(LIBS)
g-euclid1$(EXEEXT): $(g_euclid1_OBJECTS) $(g_euclid1_DEPENDENCIES) 
	@rm -f g-euclid1$(EXEEXT)
	$(LINK) $(g_euclid1_LDFLAGS) $(g_euclid1_OBJECTS) $(g_euclid1_LDADD) $(LIBS)
g-nff$(EXEEXT): $(g_nff_OBJECTS) $(g_nff_DEPENDENCIES) 
	@rm -f g-nff$(EXEEXT)
	$(LINK) $(g_nff_LDFLAGS) $(g_nff_OBJECTS) $(g_nff_LDADD) $(LIBS)
g-nmg$(EXEEXT): $(g_nmg_OBJECTS) $(g_nmg_DEPENDENCIES) 
	@rm -f g-nmg$(EXEEXT)
	$(LINK) $(g_nmg_LDFLAGS) $(g_nmg_OBJECTS) $(g_nmg_LDADD) $(LIBS)
g-obj$(EXEEXT): $(g_obj_OBJECTS) $(g_obj_DEPENDENCIES) 
	@rm -f g-obj$(EXEEXT)
	$(LINK) $(g_obj_LDFLAGS) $(g_obj_OBJECTS) $(g_obj_LDADD) $(LIBS)
g-shell.rect$(EXEEXT): $(g_shell_rect_OBJECTS) $(g_shell_rect_DEPENDENCIES) 
	@rm -f g-shell.rect$(EXEEXT)
	$(LINK) $(g_shell_rect_LDFLAGS) $(g_shell_rect_OBJECTS) $(g_shell_rect_LDADD) $(LIBS)
g-stl$(EXEEXT): $(g_stl_OBJECTS) $(g_stl_DEPENDENCIES) 
	@rm -f g-stl$(EXEEXT)
	$(LINK) $(g_stl_LDFLAGS) $(g_stl_OBJECTS) $(g_stl_LDADD) $(LIBS)
g-tankill$(EXEEXT): $(g_tankill_OBJECTS) $(g_tankill_DEPENDENCIES) 
	@rm -f g-tankill$(EXEEXT)
	$(LINK) $(g_tankill_LDFLAGS) $(g_tankill_OBJECTS) $(g_tankill_LDADD) $(LIBS)
g-var$(EXEEXT): $(g_var_OBJECTS) $(g_var_DEPENDENCIES) 
	@rm -f g-var$(EXEEXT)
	$(LINK) $(g_var_LDFLAGS) $(g_var_OBJECTS) $(g_var_LDADD) $(LIBS)
g-vrml$(EXEEXT): $(g_vrml_OBJECTS) $(g_vrml_DEPENDENCIES) 
	@rm -f g-vrml$(EXEEXT)
	$(LINK) $(g_vrml_LDFLAGS) $(g_vrml_OBJECTS) $(g_vrml_LDADD) $(LIBS)
g-x3d$(EXEEXT): $(g_x3d_OBJECTS) $(g_x3d_DEPENDENCIES) 
	@rm -f g-x3d$(EXEEXT)
	$(LINK) $(g_x3d_LDFLAGS) $(g_x3d_OBJECTS) $(g_x3d_LDADD) $(LIBS)
g-xxx$(EXEEXT): $(g_xxx_OBJECTS) $(g_xxx_DEPENDENCIES) 
	@rm -f g-xxx$(EXEEXT)
	$(LINK) $(g_xxx_LDFLAGS) $(g_xxx_OBJECTS) $(g_xxx_LDADD) $(LIBS)
g-xxx_facets$(EXEEXT): $(g_xxx_facets_OBJECTS) $(g_xxx_facets_DEPENDENCIES) 
	@rm -f g-xxx_facets$(EXEEXT)
	$(LINK) $(g_xxx_facets_LDFLAGS) $(g_xxx_facets_OBJECTS) $(g_xxx_facets_LDADD) $(LIBS)
g2asc$(EXEEXT): $(g2asc_OBJECTS) $(g2asc_DEPENDENCIES) 
	@rm -f g2asc$(EXEEXT)
	$(LINK) $(g2asc_LDFLAGS) $(g2asc_OBJECTS) $(g2asc_LDADD) $(LIBS)
g4-g5$(EXEEXT): $(g4_g5_OBJECTS) $(g4_g5_DEPENDENCIES) 
	@rm -f g4-g5$(EXEEXT)
	$(LINK) $(g4_g5_LDFLAGS) $(g4_g5_OBJECTS) $(g4_g5_LDADD) $(LIBS)
g5-g4$(EXEEXT): $(g5_g4_OBJECTS) $(g5_g4_DEPENDENCIES) 
	@rm -f g5-g4$(EXEEXT)
	$(LINK) $(g5_g4_LDFLAGS) $(g5_g4_OBJECTS) $(g5_g4_LDADD) $(LIBS)
nastran-g$(EXEEXT): $(nastran_g_OBJECTS) $(nastran_g_DEPENDENCIES) 
	@rm -f nastran-g$(EXEEXT)
	$(LINK) $(nastran_g_LDFLAGS) $(nastran_g_OBJECTS) $(nastran_g_LDADD) $(LIBS)
nmg-bot$(EXEEXT): $(nmg_bot_OBJECTS) $(nmg_bot_DEPENDENCIES) 
	@rm -f nmg-bot$(EXEEXT)
	$(LINK) $(nmg_bot_LDFLAGS) $(nmg_bot_OBJECTS) $(nmg_bot_LDADD) $(LIBS)
nmg-rib$(EXEEXT): $(nmg_rib_OBJECTS) $(nmg_rib_DEPENDENCIES) 
	@rm -f nmg-rib$(EXEEXT)
	$(LINK) $(nmg_rib_LDFLAGS) $(nmg_rib_OBJECTS) $(nmg_rib_LDADD) $(LIBS)
nmg-sgp$(EXEEXT): $(nmg_sgp_OBJECTS) $(nmg_sgp_DEPENDENCIES) 
	@rm -f nmg-sgp$(EXEEXT)
	$(LINK) $(nmg_sgp_LDFLAGS) $(nmg_sgp_OBJECTS) $(nmg_sgp_LDADD) $(LIBS)
pix2asc$(EXEEXT): $(pix2asc_OBJECTS) $(pix2asc_DEPENDENCIES) 
	@rm -f pix2asc$(EXEEXT)
	$(LINK) $(pix2asc_LDFLAGS) $(pix2asc_OBJECTS) $(pix2asc_LDADD) $(LIBS)
ply-g$(EXEEXT): $(ply_g_OBJECTS) $(ply_g_DEPENDENCIES) 
	@rm -f ply-g$(EXEEXT)
	$(LINK) $(ply_g_LDFLAGS) $(ply_g_OBJECTS) $(ply_g_LDADD) $(LIBS)
poly-bot$(EXEEXT): $(poly_bot_OBJECTS) $(poly_bot_DEPENDENCIES) 
	@rm -f poly-bot$(EXEEXT)
	$(LINK) $(poly_bot_LDFLAGS) $(poly_bot_OBJECTS) $(poly_bot_LDADD) $(LIBS)
proe-g$(EXEEXT): $(proe_g_OBJECTS) $(proe_g_DEPENDENCIES) 
	@rm -f proe-g$(EXEEXT)
	$(LINK) $(proe_g_LDFLAGS) $(proe_g_OBJECTS) $(proe_g_LDADD) $(LIBS)
stl-g$(EXEEXT): $(stl_g_OBJECTS) $(stl_g_DEPENDENCIES) 
	@rm -f stl-g$(EXEEXT)
	$(LINK) $(stl_g_LDFLAGS) $(stl_g_OBJECTS) $(stl_g_LDADD) $(LIBS)
tankill-g$(EXEEXT): $(tankill_g_OBJECTS) $(tankill_g_DEPENDENCIES) 
	@rm -f tankill-g$(EXEEXT)
	$(LINK) $(tankill_g_LDFLAGS) $(tankill_g_OBJECTS) $(tankill_g_LDADD) $(LIBS)
viewpoint-g$(EXEEXT): $(viewpoint_g_OBJECTS) $(viewpoint_g_DEPENDENCIES) 
	@rm -f viewpoint-g$(EXEEXT)
	$(LINK) $(viewpoint_g_LDFLAGS) $(viewpoint_g_OBJECTS) $(viewpoint_g_LDADD) $(LIBS)
walk_example$(EXEEXT): $(walk_example_OBJECTS) $(walk_example_DEPENDENCIES) 
	@rm -f walk_example$(EXEEXT)
	$(LINK) $(walk_example_LDFLAGS) $(walk_example_OBJECTS) $(walk_example_LDADD) $(LIBS)
dist_binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(dist_bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(dist_binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f"; \
	    $(dist_binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asc-nmg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asc2g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asc2pix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bot-bldxf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bot-raw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bot_shell-vtk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conv-vg2g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cy-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbupgrade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dxf-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enf-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/euclid-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/euclid_format.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/euclid_unformat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fast4-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-acad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-adrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-dxf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-euclid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-euclid1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-nff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-nmg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-shell.rect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-stl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-tankill.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-var.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-vrml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-x3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-xxx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g-xxx_facets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g2asc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g4-g5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g5-g4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nastran-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nmg-bot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nmg-rib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nmg-sgp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pix2asc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ply-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/poly-bot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proe-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stl-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tankill-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewpoint-g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/walk_example.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

man1dir = $(mandir)/man1
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst"; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man1dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man1dir)/$$inst; \
	done
sample_applicationsDATA_INSTALL = $(INSTALL_DATA)
install-sample_applicationsDATA: $(sample_applications_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(sample_applicationsdir)
	@list='$(sample_applications_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(sample_applicationsDATA_INSTALL) $$d$$p $(DESTDIR)$(sample_applicationsdir)/$$f"; \
	  $(sample_applicationsDATA_INSTALL) $$d$$p $(DESTDIR)$(sample_applicationsdir)/$$f; \
	done

uninstall-sample_applicationsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sample_applications_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(sample_applicationsdir)/$$f"; \
	  rm -f $(DESTDIR)$(sample_applicationsdir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(bindir) $(DESTDIR)$(man1dir) $(DESTDIR)$(sample_applicationsdir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-man install-sample_applicationsDATA

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-info: install-info-recursive

install-man: install-man1

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-info-am uninstall-man \
	uninstall-sample_applicationsDATA

uninstall-info: uninstall-info-recursive

uninstall-man: uninstall-man1

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS clean-recursive distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am dvi-recursive info info-am info-recursive install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-recursive install-dist_binSCRIPTS install-exec \
	install-exec-am install-exec-recursive install-info \
	install-info-am install-info-recursive install-man install-man1 \
	install-recursive install-sample_applicationsDATA install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	installdirs-recursive maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-info-am uninstall-info-recursive uninstall-man \
	uninstall-man1 uninstall-recursive \
	uninstall-sample_applicationsDATA

@ONLY_BENCHMARK_TRUE@	$(COMMON_EXTRA) \
@ONLY_BENCHMARK_TRUE@	CMakeLists.txt \
@ONLY_BENCHMARK_TRUE@	g-xxx.c \
@ONLY_BENCHMARK_TRUE@	g-xxx_facets.c \
@ONLY_BENCHMARK_TRUE@	g4-g5.c \
@ONLY_BENCHMARK_TRUE@	g5-g4.c \
@ONLY_BENCHMARK_TRUE@	walk_example.c

.PHONY: fast fast-am fast-recursive noprod prodclean prodclean-recursive depends

#
# compile all sources first, then link on a second pass.  requires 2x
# disk space to account for uncertainty on whether the objects are for
# a library or an executable.
#
fast: fast-recursive

fast-am: $(FAST_OBJECTS) all-am

fast-recursive:
	@list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) fast); \
	done
	@$(MAKE) $(AM_MAKEFLAGS) fast-am

#
# remove all of the build targets (binaries and libraries)
#
noprod: prodclean

prodclean: prodclean-recursive
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo "rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo "rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@list='$(EXTRA_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo "rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
	@if test ! -z "$(lib_LTLIBRARIES)" ; then echo rm -f $(lib_LTLIBRARIES) && rm -f $(lib_LTLIBRARIES) ; fi
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
	@if test ! -z "$(noinst_LTLIBRARIES)" ; then echo rm -f $(noinst_LTLIBRARIES) && rm -f $(noinst_LTLIBRARIES) ; fi
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
	@if test ! -z "$(lib_LIBRARIES)" ; then echo rm -f $(lib_LIBRARIES) && rm -f $(lib_LIBRARIES) ; fi
	@if test ! -z "$(noinst_LIBRARIES)" ; then echo rm -f $(noinst_LIBRARIES) && rm -f $(noinst_LIBRARIES) ; fi

prodclean-recursive:
	@list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) prodclean); \
	done

depends:
	for dep in ${DEPS} ${DEPENDS} ; do echo "$$dep" ; (cd ${top_builddir}/$$dep && $(MAKE) $(AM_MAKEFLAGS) depends all) ; done

install-depends:
	for dep in ${DEPS} ${DEPENDS} ; do echo "$$dep" ; (cd ${top_builddir}/$$dep && $(MAKE) $(AM_MAKEFLAGS) install-depends install) ; done

# end ONLY_BENCHMARK
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
